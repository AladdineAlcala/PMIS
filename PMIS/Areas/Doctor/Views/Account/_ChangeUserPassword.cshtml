@using PMIS.ViewModels
@model UserSecurityViewModel

<h1>Change User Password</h1>

@using (Html.BeginForm("UpdateUserPasswordAsync", "Account", FormMethod.Post, new { role = "form", id = "formUpdatePass" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.userId, new { @id = "userId" })
    <div class="row">
        <div class="col-lg">

            <div class="form-group row">
                <label class="col-sm-2 col-form-label required">Current Password:</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.oldPass, new { @class = "form-control required",type="password",id="oldpass"})
                    @Html.ValidationMessageFor(m => m.oldPass, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label required">New Password:</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.newPass, new { @class = "form-control required",type="password",id="newpass"})
                    @Html.ValidationMessageFor(m => m.newPass, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label required">Confirm Password</label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.confirmnewPass, new { @class = "form-control required",type = "password",id="confirmpass" })
                    @Html.ValidationMessageFor(m => m.confirmnewPass, null, new { @class = "text-danger" })
                </div>
            </div>
           
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 offset-md-2">

            <button type="button" class="btn btn-info" id="btn-saveUserSecurity">Update </button>
        </div>
    </div>
}

